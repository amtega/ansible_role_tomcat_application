---
# Tasks to setup application artifacts

- block:
    - name: deploy http/https/file artifacts
      get_url:
        url: "{{ item.1.url }}"
        dest: "{{ item.0.base }}/{{ item.1.dest }}"
        force: yes
        url_username: "{{ item.1.username | default(omit) }}"
        url_password: "{{ item.1.password | default(omit) }}"
        timeout: "{{ item.1.timeout | default(omit) }}"
        validate_certs: "{{ item.1.validate_certs | default(omit) }}"
      environment: "{{ tomcat_application_http_proxy_environment }}"
      when:
        - tomcat_application_state == "present"
        - protocol in ["http", "https", "file"]
      register: tomcat_application_deploy_result
      loop: >-
        {{ query('nested',
                 tomcat_application_server_instances,
                 tomcat_application_artifacts) }}
      loop_control:
        label: "{{ item.1.url }} {{ item.0.base }}/{{ item.1.dest }}"
      notify:
        - shutdown tomcat instance

    - block:
        - name: remove http/https/file artifacts downloadable
          file:
            path: "{{ artifact_downloadable }}"
            state: absent
          register: tomcat_application_undeploy_artifacts_result
          loop: >-
            {{ query('nested',
                     tomcat_application_server_instances,
                     tomcat_application_artifacts) }}
          loop_control:
            label: "{{ artifact_downloadable }}"
          notify:
            - shutdown tomcat instance

        - name: remove http/https/file artifacts deployed directories
          file:
            path: "{{ artifact_deployed_dir }}"
            state: absent
          register: tomcat_application_undeploy_artifacts_dirs_result
          loop: >-
            {{ query('nested',
                     tomcat_application_server_instances,
                     tomcat_application_artifacts) }}
          loop_control:
            label: "{{ artifact_deployed_dir }}"
          notify:
            - shutdown tomcat instance
      when:
        - tomcat_application_state == "absent"
        - protocol in ["http", "https", "file"]
  vars:
    protocol: "{{ item.1.url | regex_replace('(.*)://.*', '\\1') }}"
    artifact_url_file: "{{ item.1.url | urlsplit('path') | basename }}"
    artifact_downloadable: >-
      {{ (item.1.dest is search("\.war$"))
         | ternary(item.0.base
                   + "/"
                   + item.1.dest,
                   item.0.base
                   + "/"
                   + item.1.dest
                   + "/"
                   + artifact_url_file) }}
    artifact_deployed_dir: >-
      {{ (item.1.dest is search("\.war$"))
         | ternary(item.0.base + "/" + (item.1.dest | splitext).0,
                   item.0.base
                   + "/"
                   + item.1.dest
                   + "/"
                   + (artifact_url_file | splitext).0) }}
  tags:
    - role::tomcat_application
    - role::tomcat_application::artifacts
