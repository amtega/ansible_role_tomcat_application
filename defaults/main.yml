---
# Role default lower priority variables

# Name of the tomcat application

# tomcat_application_name:

# List of instances where the application must be deployed. If the tomcat server
# was deployed using amtega.tomcat role you can use the name of the instance as
# value. If not, you must use the instance base path as value.

tomcat_application_instances: []

# Application state. Can be "present" or "absent"

tomcat_application_state: present

# List of directories to create when application is deployed

tomcat_application_dirs: []

# Remove applications directories when application state is absent

tomcat_application_dirs_remove: no

# Ignore erroros during applications directories removal

tomcat_application_dirs_remove_ignore_errors: yes

# List of application datasources to provisione. The dicts must have the
# datasources attributes you want to use, for example this ones:
#
# { name: "jdbc/myAppDS"                      # Name
#   auth: Container                           # Authentication
#   type: acme.jdbc.AcmeDataSource            # Type class
#   factory: acme.jdbc.AcmeDataSourceFactory  # Factory class
#   driverClassName: acme.jdbc.AcmeDriver     # Driver class
#   url: dbc:acme:oci:@DATABASE               # Url
#   user: app                                 # User
#   password: app_password                    # Password
#   template: my_datasource_template          # Tempalte to apply (see below) }
#
#
# To avoid copy & paste when using similar datasources, you can setup a variable
# containing the common part of the datasources and the put the name of this
# variable in the datasource `template` attribute
#
# In the template you can refer to the datasource number being expanded using
# the variables `tomcat_application_datasource_index0` (starts with 0) and
# `tomcat_application_datasource_index1` (starts with 1)
#
# In the template you can use the variable `tomcat_application_datasource`
# to refer the concrete datasource being expanded.
#
# Also, you can use the attribute exclude_attributes in the datasource or the
# template to list the attribute names you don't want to be included in the
# final tomcat datasource. Default is ['template'].
#
# Sample:
#
# my_template:
#   name: >-
#     {{ "jdbc/"
#        + tomcat_application_name
#        + tomcat_application_datasource_index1 | string }}
#   auth: Container
#   factory: org.apache.tomcat.jdbc.pool.DataSourceFactory
#   type: javax.sql.DataSource
#   driverClassName: com.mysql.jdbc.Driver
#   url: "jdbc:mysql://{{ tomcat_application_datasource.url }}"
#   minIdle: 0
#   maxIdle: 30
#   initialSize: 5
#   maxActive: 100
#   maxWait: 10000
#
# tomcat_application_datasources:
#   - template: my_template
#     user: app
#     password: app_password
#     _server: mysql.acme.com

tomcat_application_datasources: []

# List of application artifacts to deploy. Take a look to `amtega.artifact` role
# documentation to known about supported types of artifacts, their specific
# settings and how to configure a proxy if necessary.
#
# The artifact attributes `owner` and `group` will be overriden to match tomcat
# instance user and group
#
# The artifact attribute `dest` is relative to the tomcat instance base
#
# Sample:
#
# tomcat_application_artifacts:
#   - id: sample_war
#     type: https
#     host: https://tomcat.apache.org
#     path: tomcat-8.0-doc/appdev/sample
#     file: sample.war
#     dest: webapps
#     timeout: 120
#     validate_certs: yes

tomcat_application_artifacts: []

# Tocmat startup and shutdown scripts (relative to instance base). By default
# the role tries to guess the script to use

# tomcat_application_instance_startup:
# tomcat_application_instance_shutdown:

# Force tomcat instance restart

tomcat_application_instance_force_restart: no

# Number of seconds to wait after shutdown to startup tomcat instance again

tomcat_application_instance_restart_pause: 1

# Become method to use to change to tomcat user

tomcat_application_instance_restart_become_method: su

# List of dicts with the settings to use to connect to the tomcat manager for
# deployment verification. If the config is missing no check will be done. The
# dicts has the following structure:
#
# {
#   instance: <instance>   # Instance as described in
#                         # `tomcat_application_isntances`
#   url: <url>            # Url to tomcat manager
#   user: <user>          # User with access privileges to tomcat manager
#   password: <password>  # Password of the previous user
#   timeout: <s>          # Timeout in seconds. Default is 5
#   retries: <n>          # Number of retries. Default is 0
#   delay: <s>            # Delay in seconds between attempts. Default is 0
# }
#
# Example:
#
# tomcat_application_managers:
#   - instance: tomcat
#     url: http://localhost:8080
#     user: admin
#     password: admin
#     timeout: 5
#     retries: 5
#     delay: 3

tomcat_application_managers: {}

# Force application deployment

tomcat_application_force: no

# Hide sensitive information

tomcat_application_no_log: yes
